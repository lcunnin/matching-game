{"version":3,"sources":["Components/Card/Card.jsx","App.js","index.js"],"names":["Card","props","className","isFlipped","onClick","flipCard","index","src","animal","id","alt","height","width","initialState","array","i","length","j","Math","floor","random","temp","shuffleCardArray","name","isMatched","App","useState","animalPairs","setAnimalPairs","firstFaceUp","setFirstFaceUp","secondFaceUp","setSecondFaceUp","newAnimalPairs","useEffect","setTimeout","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.017a86f8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst url = \"https://source.unsplash.com/category/animals\";\n\nexport default function Card(props) {\n  return (\n    <div\n      className={`animal-card ${props.isFlipped ? \"flipped\" : \"\"} `}\n      onClick={() => props.flipCard(props.index)}\n    >\n      <div className=\"inside-card\">\n        <div className=\"frontside\">\n          <img\n            src={`${url}/${props.animal.id}.png`}\n            alt=\"animal\"\n            height=\"200\"\n            width=\"150\"\n          />\n        </div>\n        <div className=\"backside\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport Card from \"./Components/Card/Card\";\n\n/*https://stackoverflow.com/questions/49555273/how-to-shuffle-an-array-of-objects-in-javascript*/\n\nfunction shuffleCardArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nfunction initialState() {\n  return shuffleCardArray([\n    {\n      id: \"NqVbo0ocJ2k\",\n      name: \"cow\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"E32fGlISSBk\",\n      name: \"frog\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"NR2eMg9zXxA\",\n      name: \"fluffydog\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"V7SKRhXskv8\",\n      name: \"fish\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"yMSecCHsIBc\",\n      name: \"coolcat\",\n      isFlipped: false,\n      isMatched: false\n    },\n    { id: \"ByAKvjBH1ZY\", name: \"turtle\", isFlipped: false, isMatched: false },\n    {\n      id: \"c9mZYrCmvRo\",\n      name: \"parrot\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"AQRp2NH-O8k\",\n      name: \"yellowhat\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"NqVbo0ocJ2k\",\n      name: \"cow\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"E32fGlISSBk\",\n      name: \"frog\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"NR2eMg9zXxA\",\n      name: \"fluffydog\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"V7SKRhXskv8\",\n      name: \"fish\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"yMSecCHsIBc\",\n      name: \"coolcat\",\n      isFlipped: false,\n      isMatched: false\n    },\n    { id: \"ByAKvjBH1ZY\", name: \"turtle\", isFlipped: false, isMatched: false },\n    {\n      id: \"c9mZYrCmvRo\",\n      name: \"parrot\",\n      isFlipped: false,\n      isMatched: false\n    },\n    {\n      id: \"AQRp2NH-O8k\",\n      name: \"yellowhat\",\n      isFlipped: false,\n      isMatched: false\n    }\n  ]);\n}\n\nexport default function App() {\n  const [animalPairs, setAnimalPairs] = useState(initialState());\n  const [firstFaceUp, setFirstFaceUp] = useState(false);\n  const [secondFaceUp, setSecondFaceUp] = useState(false);\n\n  function flipCard(index) {\n    if (animalPairs[index].isFlipped || secondFaceUp !== false) return;\n\n    let newAnimalPairs = [...animalPairs];\n    newAnimalPairs[index].isFlipped = true;\n\n    if (firstFaceUp !== false) {\n      if (newAnimalPairs[index].id === newAnimalPairs[firstFaceUp].id) {\n        newAnimalPairs[index].isMatched = true;\n        newAnimalPairs[firstFaceUp].isMatched = true;\n        setAnimalPairs(newAnimalPairs);\n        setFirstFaceUp(false);\n        return;\n      } else {\n        setAnimalPairs(newAnimalPairs);\n        setSecondFaceUp(index);\n      }\n    } else {\n      setAnimalPairs(newAnimalPairs);\n      setFirstFaceUp(index);\n    }\n  }\n\n  useEffect(() => {\n    if (secondFaceUp === false) return;\n    setTimeout(() => {\n      setAnimalPairs((animalPairs) =>\n        animalPairs.map((animal) => {\n          return {\n            id: animal.id,\n            name: animal.name,\n            isFlipped: animal.isMatched,\n            isMatched: animal.isMatched\n          };\n        })\n      );\n      setFirstFaceUp(false);\n      setSecondFaceUp(false);\n    }, 1000);\n  }, [secondFaceUp]);\n\n  const handleNewGame = () => {\n    setAnimalPairs(initialState());\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"game-name\">\n        <h1>Matching Game</h1>\n        <p>Flip the card to match the animal pictures!</p>\n        <button className=\"new-game-button\" onClick={handleNewGame}>\n          New Game\n        </button>\n      </div>\n      <div className=\"card-layout\">\n        {animalPairs.map((animal, index) => {\n          let isFlipped = animal.isFlipped;\n          return (\n            <Card\n              isFlipped={isFlipped}\n              key={index + \"_\" + animal.id}\n              flipCard={flipCard}\n              index={index}\n              animal={animal}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}